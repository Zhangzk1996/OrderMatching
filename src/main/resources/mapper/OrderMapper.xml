<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.team4.dao.OrderMapper">
	<resultMap id="OrderMap" type="Order">
		<id column="orderId" property="orderId" jdbcType="INTEGER" />
		<result column="symbol" property="symbol" jdbcType="VARCHAR" />
		<result column="traderName" property="traderName" jdbcType="VARCHAR" />
		<result column="side" property="side" jdbcType="VARCHAR" />
		<result column="Qty" property="qty" jdbcType="INTEGER"></result>
		<result column="price" property="price" jdbcType="DOUBLE"></result>
		<result column="FOK" property="fok" jdbcType="VARCHAR"></result>
		<result column="cond" property="cond" jdbcType="VARCHAR"></result>
		<result column="sta" property="sta" jdbcType="VARCHAR"></result>
		<result column="otherPrice" property="otherPrice" jdbcType="DOUBLE"></result>
	</resultMap>

	<sql id="Base_Order_List">
		orderId,symbol,traderName,side,Qty,price,FOK,cond,sta,otherPrice
	</sql>

	<select id="getOrderById" resultMap="OrderMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Order_List" />
		from orders
		where orderId = #{orderId,jdbcType=INTEGER}
	</select>

	<insert id="addOrder" parameterType="com.team4.pojo.Order">
		insert into orders
		(orderId,symbol,traderName,side,Qty,price,FOK,cond,sta,otherPrice)
		values (#{orderId,jdbcType=INTEGER}, #{symbol,jdbcType=VARCHAR},
		#{traderName,jdbcType=VARCHAR},#{side,jdbcType=VARCHAR},
		#{qty,jdbcType=INTEGER},#{price,jdbcType=DECIMAL},
		#{fok,jdbcType=VARCHAR},#{cond,jdbcType=VARCHAR},
		#{sta,jdbcType=VARCHAR},#{otherPrice,jdbcType=DECIMAL})
	</insert>

	<select id="getAllBidOrders" resultMap="OrderMap" parameterType="String">
		select
		<include refid="Base_Order_List" />
		from orders where side = "buy"
		order by price desc
	</select>

	<select id="getAllAskOrders" resultMap="OrderMap" parameterType="String">
		select
		<include refid="Base_Order_List" />
		from orders where side = "sell"
		order by price asc
	</select>

	<select id="getBidOrdersBySymbol" resultMap="OrderMap" parameterType="String">
		select
		<include refid="Base_Order_List" />
		from orders
		where symbol = #{symbol,jdbcType=VARCHAR} and side = "buy" and sta = "alive"
		order by price desc
	</select>

	<select id="getAskOrdersBySymbol" resultMap="OrderMap" parameterType="String">
		select
		<include refid="Base_Order_List" />
		from orders
		where symbol = #{symbol,jdbcType=VARCHAR} and side = "sell" and sta = "alive"
		order by price asc
	</select>
	
	<select id="getMaxBidOrdersBySymbol" resultMap="OrderMap" parameterType="String">
		select
		<include refid="Base_Order_List" />
		from orders
		where symbol = #{symbol,jdbcType=VARCHAR} and side = "buy"
		and price = (select max(price) from orders where symbol = #{symbol,jdbcType=VARCHAR} and side = "buy")
	</select>

	<select id="getMinAskOrdersBySymbol" resultMap="OrderMap" parameterType="String">
		select
		<include refid="Base_Order_List" />
		from orders
		where symbol = #{symbol,jdbcType=VARCHAR} and side = "sell"
		and price = (select min(price) from orders where symbol = #{symbol,jdbcType=VARCHAR} and side = "sell")
	</select>
	
	<select id="getBidOrdersByTrader" resultMap="OrderMap">
		select
		<include refid="Base_Order_List" />
		from orders
		where traderName = #{traderName,jdbcType=VARCHAR} and side = "buy"
		order by price
	</select>
	
	<select id="getAskOrdersByTrader" resultMap="OrderMap" parameterType="String">
		select
		<include refid="Base_Order_List" />
		from orders
		where traderName = #{traderName,jdbcType=VARCHAR} and side = "sell"
		order by price asc
	</select>

	<select id="getOrderCount" resultType="java.lang.Integer">
		select
		count(*)
		from orders
	</select>

	<delete id="deleteOrder" parameterType="java.lang.Integer">
		update orders set sta = "deleted" where orderId =
		#{orderId,jdbcType=INTEGER}
	</delete>
	
	<update id="closeMatchedOrder" parameterType="java.lang.Integer">
		update orders set sta = "matched"
		where orderId = #{orderId,jdbcType=INTEGER}
	</update>
	
	<update id="updateOrder" parameterType="com.team4.pojo.Order">
		update orders 
		set symbol = #{symbol,jdbcType=VARCHAR},
			traderName = #{traderName,jdbcType=VARCHAR},
			side = #{side,jdbcType=VARCHAR},
			Qty = #{qty,jdbcType=INTEGER},
			price = #{price,jdbcType=DECIMAL},
			FOK = #{fok,jdbcType=VARCHAR},
			cond = #{cond,jdbcType=VARCHAR},
			sta = #{sta,jdbcType=VARCHAR},
			otherPrice = #{otherPrice,jdbcType=DECIMAL}
		where orderId = #{orderId,jdbcType=INTEGER}
	</update>
	
	<select id="currentOrderId" resultType="java.lang.Integer">
		select max(orderId)
		from orders
	</select>
	
</mapper>